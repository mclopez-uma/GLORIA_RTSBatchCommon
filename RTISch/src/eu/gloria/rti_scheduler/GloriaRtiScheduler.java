package eu.gloria.rti_scheduler;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2013-03-14T08:46:17.814+01:00
 * Generated source version: 2.6.1
 * 
 */
@WebService(targetNamespace = "http://gloria.eu/rti_scheduler", name = "gloria_rti_scheduler")
@XmlSeeAlso({eu.gloria.rt.entity.scheduler.ObjectFactory.class, ObjectFactory.class})
public interface GloriaRtiScheduler {

    /**
     * Cancel an offered plan list.
     * 				@param filter Search
     * 				filter.
     * 				@return Information about the found observing plans.
     * 				@throws
     * 				RtiSchError In error case.
     * 			
     */
    @WebResult(name = "out", targetNamespace = "")
    @RequestWrapper(localName = "planSearchByFilter", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanSearchByFilter")
    @WebMethod(action = "http://gloria.eu/rti_scheduler/planSearchByFilter")
    @ResponseWrapper(localName = "planSearchByFilterResponse", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanSearchByFilterResponse")
    public java.util.List<eu.gloria.rt.entity.scheduler.PlanInfo> planSearchByFilter(
        @WebParam(name = "filter", targetNamespace = "")
        eu.gloria.rt.entity.scheduler.PlanSearchFilter filter
    ) throws RtiSchError;

    /**
     * Assigns the observing plans to be execute in the
     * 				RTS.
     * 				@param planList Plan list.
     * 				@return List of pair: [plan-uuid,
     * 				CancelationState]. OfferState = [OK, Invalid]
     * 				@throws RtiSchError In
     * 				error case.
     * 			
     */
    @WebResult(name = "out", targetNamespace = "")
    @RequestWrapper(localName = "planOffer", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanOffer")
    @WebMethod(action = "http://gloria.eu/rti_scheduler/planOffer")
    @ResponseWrapper(localName = "planOfferResponse", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanOfferResponse")
    public java.util.List<eu.gloria.rt.entity.scheduler.PlanOfferInfo> planOffer(
        @WebParam(name = "planList", targetNamespace = "")
        java.util.List<java.lang.String> planList
    ) throws RtiSchError;

    /**
     * Search observing plans by uuid.
     * 				@param
     * 				planUuidList uuid list.
     * 				@return Information about the observing
     * 				plans.
     * 				@throws RtiSchError In error case.
     * 			
     */
    @WebResult(name = "out", targetNamespace = "")
    @RequestWrapper(localName = "planSearchByUuid", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanSearchByUuid")
    @WebMethod(action = "http://gloria.eu/rti_scheduler/planSearchByUuid")
    @ResponseWrapper(localName = "planSearchByUuidResponse", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanSearchByUuidResponse")
    public java.util.List<eu.gloria.rt.entity.scheduler.PlanInfo> planSearchByUuid(
        @WebParam(name = "planUuidList", targetNamespace = "")
        java.util.List<java.lang.String> planUuidList
    ) throws RtiSchError;

    /**
     * Scheduler determines the plans that can be
     * 				executed.
     * 				@param planList Plan list.
     * 				@return Confirmed plans list
     * 				@throws RtiSchError In error case.
     * 			
     */
    @WebResult(name = "out", targetNamespace = "")
    @RequestWrapper(localName = "planAdvertise", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanAdvertise")
    @WebMethod(action = "http://gloria.eu/rti_scheduler/planAdvertise")
    @ResponseWrapper(localName = "planAdvertiseResponse", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanAdvertiseResponse")
    public java.util.List<java.lang.String> planAdvertise(
        @WebParam(name = "deadline", targetNamespace = "")
        javax.xml.datatype.XMLGregorianCalendar deadline,
        @WebParam(name = "planList", targetNamespace = "")
        java.util.List<java.lang.String> planList
    ) throws RtiSchError;

    /**
     * Cancel an offered plan list.
     * 				@param planUuidList
     * 				uuid list to cancel.
     * 				@return List of pair: [plan-uuid,
     * 				CancelationState]. CancelationState = [OK, INVALID_UUID, TOO_LATE]
     * 				@throws RtiSchError In error case.
     * 			
     */
    @WebResult(name = "out", targetNamespace = "")
    @RequestWrapper(localName = "planCancel", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanCancel")
    @WebMethod(action = "http://gloria.eu/rti_scheduler/planCancel")
    @ResponseWrapper(localName = "planCancelResponse", targetNamespace = "http://gloria.eu/rti_scheduler", className = "eu.gloria.rti_scheduler.PlanCancelResponse")
    public java.util.List<eu.gloria.rt.entity.scheduler.PlanCancelationInfo> planCancel(
        @WebParam(name = "planUuidList", targetNamespace = "")
        java.util.List<java.lang.String> planUuidList
    ) throws RtiSchError;
}
